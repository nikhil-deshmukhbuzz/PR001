#pragma checksum "E:\Projects\PR001 Core\Portal\Views\Client\Add.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c8f6c23c701d310379d93da8ef329b8708728e46"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Client_Add), @"mvc.1.0.view", @"/Views/Client/Add.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Client/Add.cshtml", typeof(AspNetCore.Views_Client_Add))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Projects\PR001 Core\Portal\Views\_ViewImports.cshtml"
using Portal;

#line default
#line hidden
#line 2 "E:\Projects\PR001 Core\Portal\Views\_ViewImports.cshtml"
using Portal.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c8f6c23c701d310379d93da8ef329b8708728e46", @"/Views/Client/Add.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ea73c18953461b2da0883cbece56eb399a5ce162", @"/Views/_ViewImports.cshtml")]
    public class Views_Client_Add : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 580, true);
            WriteLiteral(@"<div class=""modal fade"" id=""mediumModal"" tabindex=""-1"" aria-labelledby=""staticModalLabel"" aria-hidden=""true"" data-backdrop=""static"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""mediumModalLabel"">Client</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" ng-click=""reset(form)"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            ");
            EndContext();
            BeginContext(580, 9502, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fd19328f592f41c0ad6029d049b985cc", async() => {
                BeginContext(609, 9466, true);
                WriteLiteral(@"
                <div class=""modal-body"">
                    <div>
                        <div class=""card"">
                            <div class=""card-header""><strong>{{header}}</strong></div>
                            <div class=""card-body card-block"">
                                <div class=""row"">
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label class="" form-control-label"">Client Name<span class=""error"">*</span></label>
                                            <div class=""input-group"">
                                                <div class=""input-group-addon""><i class=""fa fa-briefcase""></i></div>
                                                <input class=""form-control"" name=""clienteName"" maxlength=""20"" ng-model=""oClient.ClientName"" ng-class=""{ 'has-error' : form.clienteName.$invalid && !form.clienteName.$pristine }"" tabindex=""1"" autocomplete=""off"" required>");
                WriteLiteral(@"
                                            </div>
                                            <small ng-show=""form.clienteName.$invalid && !form.clienteName.$pristine"" class=""error"">Client name is required.</small>
                                        </div>
                                    </div>
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label class="" form-control-label"">Contact Person<span class=""error"">*</span></label>
                                            <div class=""input-group"">
                                                <div class=""input-group-addon""><i class=""fa fa-user""></i></div>
                                                <input class=""form-control"" name=""contactPerson"" maxlength=""20"" ng-model=""oClient.ContactPerson"" ng-class=""{ 'has-error' : form.contactPerson.$invalid && !form.contactPerson.$pristine }"" tabindex=""2"" autocomplete=""off"" required>");
                WriteLiteral(@"
                                            </div>
                                            <small ng-show=""form.contactPerson.$invalid && !form.contactPerson.$pristine"" class=""error"">Contact person is required.</small>
                                        </div>
                                    </div>
                                </div>

                                <div class=""row"">
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label class="" form-control-label"">Mobile No<span class=""error"">*</span></label>
                                            <div class=""input-group"">
                                                <div class=""input-group-addon""><i class=""fa fa-phone""></i></div>
                                                <input class=""form-control"" name=""mobile"" only-digits maxlength=""10"" ng-model=""oClient.MobileNo"" ng-class=""{ 'has-error' : form.mobil");
                WriteLiteral(@"e.$invalid && !form.mobile.$pristine }"" tabindex=""3"" autocomplete=""off"" required>
                                            </div>
                                            <small ng-show=""form.mobile.$invalid && !form.mobile.$pristine"" class=""error"">Mobile no is required.</small>
                                        </div>
                                    </div>
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label class="" form-control-label"">Email</label>
                                            <div class=""input-group"">
                                                <div class=""input-group-addon""><i class=""fa fa-envelope""></i></div>
                                                <input class=""form-control"" name=""email"" maxlength=""50"" ng-model=""oClient.Email"" tabindex=""4"" autocomplete=""off"">
                                            </div>
                         ");
                WriteLiteral(@"               </div>
                                    </div>
                                </div>

                                <div class=""row"">
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label for=""state"" class="" form-control-label"">State<span class=""error"">*</span></label>
                                            <select id=""state"" name=""state"" data-placeholder=""Choose a State..."" class=""standardSelect form-control"" tabindex=""5"" ng-class=""{'has-error': form.state.$error.required}"" ng-model=""ddl.selectedState"" ng-required=""true""></select>
                                        </div>
                                    </div>
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label for=""district"" class="" form-control-label"">District<span class=""error"">");
                WriteLiteral(@"*</span></label>
                                            <select id=""district"" name=""district"" data-placeholder=""Choose a District..."" class=""standardSelect form-control"" tabindex=""6"" ng-class=""{'has-error': form.district.$error.required}"" ng-model=""ddl.selectedDistrict"" ng-required=""true""></select>
                                        </div>
                                    </div>
                                </div>

                                <div class=""row"">
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label for=""city"" class="" form-control-label"">City<span class=""error"">*</span></label>
                                            <select id=""city"" name=""city"" data-placeholder=""Choose a City..."" class=""standardSelect form-control"" tabindex=""7"" ng-class=""{'has-error': form.city.$error.required}"" ng-model=""ddl.selectedCity"" ng-required=""true""></select>
          ");
                WriteLiteral(@"                              </div>
                                    </div>
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label for=""distributor"" class="" form-control-label"">Distributor</label>
                                            <select id=""distributor"" name=""distributor"" data-placeholder=""Choose a Distributor..."" class=""standardSelect form-control"" tabindex=""8"" ></select>
                                        </div>
                                    </div>
                                </div>

                                <div class=""row"">
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <label class="" form-control-label"">Address<span class=""error"">*</span></label>
                                            <div class=""input-group"">
          ");
                WriteLiteral(@"                                      <div class=""input-group-addon""><i class=""fa fa-envelope""></i></div>
                                                <textarea class=""form-control"" name=""address"" maxlength=""250"" ng-model=""oClient.Address"" ng-class=""{ 'has-error' : form.address.$invalid && !form.address.$pristine }"" tabindex=""8"" autocomplete=""off"" required></textarea>
                                            </div>
                                            <small ng-show=""form.address.$invalid && !form.address.$pristine"" class=""error"">Address is required.</small>
                                        </div>
                                    </div>
                                    <div class=""col"">
                                        <div class=""form-group"">
                                            <div class=""input-group float-right"" style=""padding-top: 50px;"">
                                                <span style=""padding-right:20px;"">Active</span> <label class=""switch sw");
                WriteLiteral(@"itch-text switch-info switch-pill""><input type=""checkbox"" class=""switch-input"" ng-model=""oClient.IsActive"" tabindex=""9""> <span data-on=""On"" data-off=""Off"" class=""switch-label""></span> <span class=""switch-handle""></span></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button id=""close"" type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" ng-click=""reset(form)"">Cancel</button>
                    <button id=""delete"" type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" ng-click=""delete(form)"" ng-show=""isDelete"">Delete</button>
                    <button type=""submit"" ng-click=""submit(form)"" ng-disabled=""form.clienteName.$invalid || form.contactPerson.$invalid || form.mob");
                WriteLiteral("ile.$invalid || form.contactPerson.$invalid || form.address.$invalid || form.state.$pristine || form.district.$pristine  || form.city.$pristine\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{submitTxt}}</button>\r\n                </div>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10082, 38, true);
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
