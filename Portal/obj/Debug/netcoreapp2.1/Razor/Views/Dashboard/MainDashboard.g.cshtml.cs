#pragma checksum "E:\Projects\PR001 Core\Portal\Views\Dashboard\MainDashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6ff68d6c363eabdb4e0ed21183a93c4ef455d736"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_MainDashboard), @"mvc.1.0.view", @"/Views/Dashboard/MainDashboard.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/MainDashboard.cshtml", typeof(AspNetCore.Views_Dashboard_MainDashboard))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Projects\PR001 Core\Portal\Views\_ViewImports.cshtml"
using Portal;

#line default
#line hidden
#line 2 "E:\Projects\PR001 Core\Portal\Views\_ViewImports.cshtml"
using Portal.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ff68d6c363eabdb4e0ed21183a93c4ef455d736", @"/Views/Dashboard/MainDashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ea73c18953461b2da0883cbece56eb399a5ce162", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_MainDashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Sufee/assets/js/vendor/jquery-2.1.4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Sufee/assets/js/lib/chart-js/Chart.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Sufee/assets/js/widgets.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 11164, true);
            WriteLiteral(@"<div class=""content mt-3"" ng-show=""isMainDashboard"" style=""max-height:550px;overflow-y:auto"">
    <div class=""content mt-3"">

        <div class=""col-sm-12 mb-4"">
            <div class=""card-group"">
                <div class=""card col-md-6 no-padding "">
                    <div class=""card-body"">
                        <div class=""h1 text-muted text-right mb-4"">
                            <i class=""fa fa-users""></i>
                        </div>
                        <div class=""h4 mb-0"">
                            <span>{{(""00000""+main.DistributorCount).slice(-3)}}</span>
                        </div>
                        <small class=""text-muted text-uppercase font-weight-bold"">Distributors</small>
                        <div class=""progress progress-xs mt-3 mb-0 bg-flat-color-1"" style=""width: 40%; height: 5px;""></div>
                    </div>
                </div>
                <div class=""card col-md-6 no-padding "">
                    <div class=""card-body"">
         ");
            WriteLiteral(@"               <div class=""h1 text-muted text-right mb-4"">
                            <i class=""fa fa-user-plus""></i>
                        </div>
                        <div class=""h4 mb-0"">
                            <span>{{(""00000""+main.ClientCount).slice(-3)}}</span>
                        </div>
                        <small class=""text-muted text-uppercase font-weight-bold"">New Clients</small>
                        <div class=""progress progress-xs mt-3 mb-0 bg-flat-color-2"" style=""width: 40%; height: 5px;""></div>
                    </div>
                </div>
                <div class=""card col-md-6 no-padding "">
                    <div class=""card-body"">
                        <div class=""h1 text-muted text-right mb-4"">
                            <i class=""fa fa-cart-plus""></i>
                        </div>
                        <div class=""h4 mb-0"">
                            <span>{{(""00000""+main.ProductSoldCount).slice(-3)}}</span>
                        </div>");
            WriteLiteral(@"
                        <small class=""text-muted text-uppercase font-weight-bold"">Products sold</small>
                        <div class=""progress progress-xs mt-3 mb-0 bg-flat-color-3"" style=""width: 40%; height: 5px;""></div>
                    </div>
                </div>
                <div class=""card col-md-6 no-padding "">
                    <div class=""card-body"">
                        <div class=""h1 text-muted text-right mb-4"">
                            <i class=""fa fa-inr""></i>
                        </div>
                        <div class=""h4 mb-0"">
                            <span>{{main.PaymentDues | INR}}</span>
                        </div>
                        <small class=""text-muted text-uppercase font-weight-bold"">Payment Dues</small>
                        <div class=""progress progress-xs mt-3 mb-0 bg-flat-color-4"" style=""width: 40%; height: 5px;""></div>
                    </div>
                </div>
                <div class=""card col-md-6 no-padding ");
            WriteLiteral(@""">
                    <div class=""card-body"">
                        <div class=""h1 text-muted text-right mb-4"">
                            <i class=""ti-headphone-alt""></i>
                        </div>
                        <div class=""h4 mb-0"">
                            <span>{{(""00000""+main.CallLogCount).slice(-3)}}</span>
                        </div>
                        <small class=""text-muted text-uppercase font-weight-bold"">Call Logs</small>
                        <div class=""progress progress-xs mt-3 mb-0 bg-flat-color-5"" style=""width: 40%; height: 5px;""></div>
                    </div>
                </div>

            </div>
        </div>

        <div class=""content mt-3"">
            <div class=""animated fadeIn"">
                <div class=""row"">

                    <div class=""col-md-6 col-lg-3"">
                        <div class=""card text-white bg-flat-color-1"">
                            <div class=""card-body pb-0"">
                                <");
            WriteLiteral(@"h4 class=""mb-0"">
                                    <span>Order</span>
                                </h4>

                                <div class=""chart-wrapper px-0"" style=""height:70px;"" height=""70"" />
                                <canvas id=""widgetChart1""></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <!--/.col-->
                <div class=""col-md-6 col-lg-3"">
                    <div class=""card text-white bg-flat-color-2"">
                        <div class=""card-body pb-0"">
                            <h4 class=""mb-0"">
                                <span>Dispatch</span>
                            </h4>

                            <div class=""chart-wrapper px-0"" style=""height:70px;"" height=""70"" />
                            <canvas id=""widgetChart2""></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <!");
            WriteLiteral(@"--/.col-->
            <div class=""col-md-6 col-lg-3"">
                <div class=""card text-white bg-flat-color-4"">
                    <div class=""card-body pb-0"">
                        <h4 class=""mb-0"">
                            <span>Payment Due</span>
                        </h4>

                    </div>
                    <div class=""chart-wrapper px-0"" style=""height:70px;"" height=""70"" />
                    <canvas id=""widgetChart3""></canvas>
                </div>
            </div>
        </div>
        <!--/.col-->
        <div class=""col-md-6 col-lg-3"">
            <div class=""card text-white bg-flat-color-3"">
                <div class=""card-body pb-0"">
                    <h4 class=""mb-0"">
                        <span>Call Logs</span>
                    </h4>

                    <div class=""chart-wrapper px-3"" style=""height:70px;"" height=""70"" />
                    <canvas id=""widgetChart4""></canvas>
                </div>
            </div>
        </div>
");
            WriteLiteral(@"    </div>
    <!--/.col-->
    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-four"">
                    <div class=""stat-icon dib"">
                        <i class=""ti-desktop text-muted""></i>
                    </div>
                    <div class=""stat-content"">
                        <div class=""text-left dib"">
                            <div class=""stat-heading"">Device Ready</div>
                            <div class=""stat-text"">Pending: {{main.PendingDeviceReadyCount}}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-four"">
                    <div class=""stat-icon dib"">
                        <i class=""ti-receipt text-muted""></i>
                    </div>
       ");
            WriteLiteral(@"             <div class=""stat-content"">
                        <div class=""text-left dib"">
                            <div class=""stat-heading"">Billing</div>
                            <div class=""stat-text"">Pending: {{main.PendingBillingCount}}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-four"">
                    <div class=""stat-icon dib"">
                        <i class=""ti-truck text-muted""></i>
                    </div>
                    <div class=""stat-content"">
                        <div class=""text-left dib"">
                            <div class=""stat-heading"">Dispatch</div>
                            <div class=""stat-text"">Pending: {{main.PendingDispatchCount}}</div>
                        </div>
                    </div>
                <");
            WriteLiteral(@"/div>
            </div>
        </div>
    </div>
    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-four"">
                    <div class=""stat-icon dib"">
                        <i class=""fa fa-inr text-muted""></i>
                    </div>
                    <div class=""stat-content"">
                        <div class=""text-left dib"">
                            <div class=""stat-heading"">Payment</div>
                            <div class=""stat-text"">Pending: {{main.PendingPaymentCount}}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-one"">
                    <div class=""stat-icon dib""><i class=""fa fa-inr text-success border-success""></i></div>
                    <di");
            WriteLiteral(@"v class=""stat-content dib"">
                        <div class=""stat-text"">Total Collection</div>
                        <div class=""stat-digit"">{{main.TotalCollection | INR}}</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-one"">
                    <div class=""stat-icon dib""><i class=""fa fa-inr text-success border-success""></i></div>
                    <div class=""stat-content dib"">
                        <div class=""stat-text"">Total Profit</div>
                        <div class=""stat-digit"">{{main.TotalProfit | INR}}</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-one"">
                    <div class=");
            WriteLiteral(@"""stat-icon dib""><i class=""ti-view-list-alt text-warning border-warning""></i></div>
                    <div class=""stat-content dib"">
                        <div class=""stat-text"">Order Queue</div>
                        <div class=""stat-digit"">{{main.OrderQueue}}</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""col-lg-3 col-md-6"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""stat-widget-one"">
                    <div class=""stat-icon dib""><i class=""ti-user text-primary border-primary""></i></div>
                    <div class=""stat-content dib"">
                        <div class=""stat-text"">Users</div>
                        <div class=""stat-digit"">{{main.UserCount}}</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    ");
            EndContext();
            BeginContext(11164, 68, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "24acbe7af3774bc3b2194c8ed75feb74", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11232, 8, true);
            WriteLiteral("\r\n\r\n    ");
            EndContext();
            BeginContext(11240, 70, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7d987612bca4f36abf66d92922c63f8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11310, 6, true);
            WriteLiteral("\r\n    ");
            EndContext();
            BeginContext(11316, 52, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29fe80fed2dd4908b3c046fef3da762f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11368, 8, true);
            WriteLiteral("\r\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
